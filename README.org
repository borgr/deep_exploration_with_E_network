#+TITLE: README
#+DATE: <2017-11-11 Sat>
#+AUTHOR: Jiaxuan Wang
#+EMAIL: jiaxuan@umich
#+OPTIONS: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline author:t c:nil
#+OPTIONS: creator:comment d:(not "LOGBOOK") date:t e:t email:nil f:t inline:t
#+OPTIONS: num:t p:nil pri:nil stat:t tags:t tasks:t tex:t timestamp:t toc:nil
#+OPTIONS: todo:t |:t
#+CREATOR: Emacs 25.1.1 (Org mode 8.2.10)
#+DESCRIPTION:
#+EXCLUDE_TAGS: noexport
#+KEYWORDS:
#+LANGUAGE: en
#+SELECT_TAGS: export

* Purpose

Reproduce results in ICLR submission DORA

* Running the code

The code has multiple arguments that you can pass in (e.g., to use Dora or DQN,
to use epsilon greedy or softmax, to render the environment or not, choose the 
environment to run). You can read about the options by running

#+BEGIN_SRC bash
python main.py -h
#+END_SRC

An example run using mountain car environment with the paper's setting is

#+BEGIN_SRC bash
python main.py -m dora -a softmax -g mountain_car
#+END_SRC

To repeat code in parralel using the same setting, run

#+BEGIN_SRC bash
python run_parallel.py -m dora -a softmax -g mountain_car
#+END_SRC

by default, this repeat 10 runs of the same experiment

* register the bridge environment

get your gym file location, call it gym/

#+BEGIN_SRC python :results output
import gym
import os
print(os.path.dirname(gym.__file__))
#+END_SRC

then add the following line to ~gym/envs/__init__.py~

#+BEGIN_SRC python
register(
    id="BridgeEnv-v0",
    entry_point="gym.envs.bridge.bridge:BridgeEnv",
)
#+END_SRC

then make a directory in ~gym/envs/bridge~ and put ~env/bridge.py~ in that directory

* TODO

urgent:

1. add tabular code to the repository
2. more evaluation metrics to use (e.g., record e value over time and observe
   patterns)
3. possibly drop the ms pacman experiment if too hard to tune
4. possibly drop ensemble DQN if hard to get right 

not urgent:

1. visualize the training use tensorboard
2. save model using torch
